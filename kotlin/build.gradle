plugins {
    id "com.android.library"
    id "kotlin-android"
    id "org.jetbrains.dokka"
    id "org.jetbrains.kotlin.plugin.allopen" version "$kotlin_version"
    id "com.vanniktech.maven.publish"
}

android {
    compileSdk 35
    ndkVersion "27.2.12479018"
    namespace "app.rive.runtime.kotlin"

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = compose_compiler_version
    }

    defaultConfig {
        minSdkVersion 21
        targetSdk 35

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        externalNativeBuild {
            cmake {
                abiFilters "arm64-v8a", "armeabi-v7a", "x86", "x86_64"
                arguments "-DCMAKE_VERBOSE_MAKEFILE=1", "-DANDROID_ALLOW_UNDEFINED_SYMBOLS=ON",
                        "-DANDROID_CPP_FEATURES=no-exceptions no-rtti", "-DANDROID_STL=c++_shared",
                        // Support for 16kb page sizes, necessary for NDK r27
                        // Can remove when upgrading to r28+
                        // https://developer.android.com/guide/practices/page-sizes#compile-r27
                        "-DANDROID_SUPPORT_FLEXIBLE_PAGE_SIZES=ON"
            }
        }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    externalNativeBuild {
        cmake {
            path file("src/main/cpp/CMakeLists.txt")
            version "3.22.1"
        }
    }

    dokkaGfm {
        dokkaSourceSets {
            named("main") {
                noAndroidSdkLink.set(false)
                outputDirectory.set(layout.buildDirectory.resolve("dokka"))
                reportUndocumented.set(true)
            }
        }
    }
}

dependencies {
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.9.1"
    implementation "androidx.startup:startup-runtime:1.2.0"
    implementation "com.android.volley:volley:1.2.1"
    // Required until minSdk >= 23
    // https://github.com/KeepSafe/ReLinker?tab=readme-ov-file#who-needs-relinker
    implementation "com.getkeepsafe.relinker:relinker:1.4.5"

    def composeBom = platform("androidx.compose:compose-bom:$compose_bom_version")

    compileOnly(composeBom)
    // Allow clients to use their own Compose version
    // This will change to implementation when we ship Compose support
    compileOnly("androidx.compose.runtime:runtime")

    // Used by Compose previews and UI tests
    debugImplementation(composeBom)
    debugImplementation("androidx.compose.ui:ui-test-manifest")

    androidTestImplementation(composeBom)
    androidTestImplementation "androidx.compose.foundation:foundation-layout"
    androidTestImplementation "androidx.compose.material3:material3"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4"
    androidTestImplementation "androidx.test.ext:junit-ktx:1.2.1"
    androidTestImplementation "androidx.test:runner:1.6.2"
    //noinspection GradleDependency Match with Kotlin version
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    //noinspection GradleDependency Last version that supports Kotlin 1.9.x
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.8.1"
}

allOpen {
    // Allows mocking for classes without opening them for release builds
    annotation "androidx.annotation.OpenForTesting"
}

mavenPublishing {
    publishToMavenCentral()
    signAllPublications()
    coordinates(PUBLISH_GROUP_ID, PUBLISH_ARTIFACT_ID, PUBLISH_VERSION)

    // Mostly self-explanatory metadata
    pom {
        name = PUBLISH_ARTIFACT_ID
        description = 'Rive is a real-time interactive design and animation tool. Use our collaborative editor to create motion graphics that respond to different states and user inputs. Then load your animations into apps, games, and websites with our lightweight open-source runtimes.'
        url = 'https://rive.app'
        licenses {
            license {
                name = 'MIT License'
                url = 'https://github.com/rive-app/rive-android/blob/master/LICENSE'
            }
        }

        developers {
            developer {
                id = 'luigi-rosso'
                name = 'Luigi Rosso'
                email = 'luigi@rive.app'
            }
            developer {
                id = 'umberto-sonnino'
                name = 'Umberto Sonnino'
                email = 'umberto@rive.app'
            }
            developer {
                id = 'mjtalbot'
                name = 'Maxwell Talbot'
                email = 'max@rive.app'
            }
            developer {
                id = 'erikuggeldahl'
                name = 'Erik Uggeldahl'
                email = 'erik@rive.app'
            }
        }

        // Version control info - if you're using GitHub, follow the
        // format as seen here
        scm {
            connection = 'scm:git:git@github.com:rive-app/rive-android.git'
            developerConnection = 'scm:git:ssh://git@github.com:rive-app/rive-android.git'
            url = 'https://github.com/rive-app/rive-android/tree/master'
        }
    }
}
