plugins {
    id "com.android.library"
    id "kotlin-android"
    id "org.jetbrains.dokka"
    id "org.jetbrains.kotlin.plugin.allopen" version "$kotlin_version"
    id "com.vanniktech.maven.publish"
}

android {
    compileSdk 35
    ndkVersion "27.2.12479018"
    namespace "app.rive.runtime.kotlin"

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = compose_compiler_version
    }

    // Enable removing miniaudio to reduce binary size
    def audioEnabled = !project.hasProperty("noAudio")

    defaultConfig {
        minSdkVersion 21
        targetSdk 35

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        externalNativeBuild {
            cmake {
                // Used during PR matrix builds to build each architecture as a separate job
                // Also useful for local testing
                if (project.hasProperty("abiFilters")) {
                    // Take a comma-separated string from the project property,
                    // split it into a list, and trim whitespace from each item
                    def abiList = project.property('abiFilters').split(',').collect { it.trim() }
                    // Spread (*) the list elements as separate arguments
                    abiFilters(*abiList)
                } else {
                    // Default to building all when no property is passed
                    abiFilters "x86", "x86_64", "armeabi-v7a", "arm64-v8a"
                }
                arguments "-DCMAKE_VERBOSE_MAKEFILE=1", "-DANDROID_ALLOW_UNDEFINED_SYMBOLS=ON",
                        "-DANDROID_CPP_FEATURES=no-exceptions no-rtti", "-DANDROID_STL=c++_shared",
                        // Support for 16kb page sizes, necessary for NDK r27
                        // Can remove when upgrading to r28+
                        // https://developer.android.com/guide/practices/page-sizes#compile-r27
                        "-DANDROID_SUPPORT_FLEXIBLE_PAGE_SIZES=ON",
                        // Toggle miniaudio
                        "-DWITH_RIVE_AUDIO=${audioEnabled ? 'ON' : 'OFF'}"
            }
        }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    externalNativeBuild {
        cmake {
            path file("src/main/cpp/CMakeLists.txt")
            version "3.22.1"
        }
    }

    dokkaGfm {
        dokkaSourceSets {
            named("main") {
                noAndroidSdkLink.set(false)
                outputDirectory.set(layout.buildDirectory.resolve("dokka"))
                reportUndocumented.set(true)
            }
        }
    }
}

dependencies {
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.9.1"
    implementation "androidx.startup:startup-runtime:1.2.0"
    implementation "com.android.volley:volley:1.2.1"
    // Required until minSdk >= 23
    // https://github.com/KeepSafe/ReLinker?tab=readme-ov-file#who-needs-relinker
    implementation "com.getkeepsafe.relinker:relinker:1.4.5"

    def composeBom = platform("androidx.compose:compose-bom:$compose_bom_version")

    compileOnly(composeBom)
    // Allow clients to use their own Compose version
    // This will change to implementation when we ship Compose support
    compileOnly("androidx.compose.runtime:runtime")

    // Used by Compose previews and UI tests
    debugImplementation(composeBom)
    debugImplementation("androidx.compose.ui:ui-test-manifest")

    androidTestImplementation(composeBom)
    androidTestImplementation "androidx.compose.foundation:foundation-layout"
    androidTestImplementation "androidx.compose.material3:material3"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4"
    androidTestImplementation "androidx.test.ext:junit-ktx:1.2.1"
    androidTestImplementation "androidx.test:runner:1.6.2"
    //noinspection GradleDependency Match with Kotlin version
    androidTestImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    //noinspection GradleDependency Last version that supports Kotlin 1.9.x
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.8.1"
}

allOpen {
    // Allows mocking for classes without opening them for release builds
    annotation "androidx.annotation.OpenForTesting"
}

mavenPublishing {
    // `true` will automatically publish the artifact to Maven Central Portal.
    publishToMavenCentral(true)
    signAllPublications()
    coordinates(PUBLISH_GROUP_ID, PUBLISH_ARTIFACT_ID, PUBLISH_VERSION)

    // Mostly self-explanatory metadata
    pom {
        name = PUBLISH_ARTIFACT_ID
        description = 'Rive is a real-time interactive design and animation tool. Use our collaborative editor to create motion graphics that respond to different states and user inputs. Then load your animations into apps, games, and websites with our lightweight open-source runtimes.'
        url = 'https://rive.app'
        licenses {
            license {
                name = 'MIT License'
                url = 'https://github.com/rive-app/rive-android/blob/master/LICENSE'
            }
        }

        developers {
            developer {
                id = 'luigi-rosso'
                name = 'Luigi Rosso'
                email = 'luigi@rive.app'
            }
            developer {
                id = 'umberto-sonnino'
                name = 'Umberto Sonnino'
                email = 'umberto@rive.app'
            }
            developer {
                id = 'mjtalbot'
                name = 'Maxwell Talbot'
                email = 'max@rive.app'
            }
            developer {
                id = 'erikuggeldahl'
                name = 'Erik Uggeldahl'
                email = 'erik@rive.app'
            }
        }

        // Version control info - if you're using GitHub, follow the
        // format as seen here
        scm {
            connection = 'scm:git:git@github.com:rive-app/rive-android.git'
            developerConnection = 'scm:git:ssh://git@github.com:rive-app/rive-android.git'
            url = 'https://github.com/rive-app/rive-android/tree/master'
        }
    }
}